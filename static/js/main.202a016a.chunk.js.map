{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","today","className","Component","getRandomName","value","now","toString","App","clockVisible","clockName","timerID","addClockComponent","removeClockComponent","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OAGjCM,QAAQC,KAAK,EAAKT,MAAMC,YAAYS,cAAcC,OAAO,IAAK,MAC7D,OAbP,gCAkBE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SArBpE,kCAyBE,WACER,OAAOW,cAAcZ,KAAKD,WA1B9B,oBA6BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACFI,EAAQb,KAAKJ,MAAMC,YAAYS,cAAcC,OAAO,IAAK,GAE/D,OACE,sBAAKO,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCL,IAEhC,YAED,sBAAMK,UAAU,cAAhB,SAA+BD,WAvCvC,GAA2BE,a,MCN3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GASX,IAAMG,EAAb,4MACExB,MAAyB,CACvByB,cAAc,EACdC,UAAW,WAHf,EAOEC,QAAU,EAPZ,EA4BEC,kBAAoB,WAClB,EAAKrB,SAAS,CAAEkB,cAAc,KA7BlC,EAiCEI,qBAAuB,SAACC,GAEtBA,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,cAAc,KApClC,uDASE,WAAqB,IAAD,OAElBrB,KAAKuB,QAAUtB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,MAGHY,SAASC,iBAAiB,cAAe7B,KAAKyB,sBAE9CG,SAASC,iBAAiB,QAAS7B,KAAKwB,qBAlB5C,kCAqBE,WACEvB,OAAOW,cAAcZ,KAAKuB,SAE1BK,SAASE,oBAAoB,cAAe9B,KAAKyB,sBACjDG,SAASE,oBAAoB,QAAS9B,KAAKwB,qBAzB/C,oBAuCE,WACE,IAAQF,EAActB,KAAKJ,MAAnB0B,UAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCd,KAAKJ,MAAMyB,cAAgB,cAAC,EAAD,CAAOZ,KAAMa,WA7CjD,GAAyBP,aCbzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.202a016a.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  currentTime: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentTime: new Date() });\n\n      // eslint-disable-next-line\n      console.info(this.state.currentTime.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  // Readonly is not a simple type but a TypeScript modifier\n  // It creates a new type with all the properties of the original type set as read-only\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const today = this.state.currentTime.toUTCString().slice(-12, -4);\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">{today}</span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\n// Global state of Root component\ntype State = {\n  clockVisible: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockVisible: true,\n    clockName: 'Clock-0',\n  };\n\n  // Creates a class property \"timerID\" and assigns it 0\n  timerID = 0;\n\n  componentDidMount() {\n    // Every 3s change state of `clockName` by randomly generated string\n    this.timerID = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    // Event fired when user right-clicks on the page -> exec. `removeClockComponent` method\n    document.addEventListener('contextmenu', this.removeClockComponent);\n\n    document.addEventListener('click', this.addClockComponent);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerID);\n\n    document.removeEventListener('contextmenu', this.removeClockComponent);\n    document.removeEventListener('click', this.addClockComponent);\n  }\n\n  addClockComponent = () => {\n    this.setState({ clockVisible: true });\n  };\n\n  // MouseEvent is built-in Typescript type representing a mouse event in the web browser\n  removeClockComponent = (event: MouseEvent) => {\n    // Prevent opening of the context menu\n    event.preventDefault();\n    this.setState({ clockVisible: false });\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.clockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}